{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/MacUser/Documents/Home/omdb-react/frontend/src/components/Movies/Details.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useParams } from 'react-router-dom';\nconst API_KEY = 'ce762116';\n\nconst MovieDetails = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [movieDetails, setMovieDetails] = useState(null);\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(`http://www.omdbapi.com/?i=${id}&apikey=${API_KEY}`);\n        setMovieDetails(response.data);\n      } catch (error) {\n        setErrorMessage(error);\n      }\n    };\n\n    fetchMovieDetails();\n    setIsLoading(false);\n    return () => abortController.abort();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-details\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lds-dual-ring\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"card-img-top h-50\",\n        style: {\n          objectFit: 'cover'\n        },\n        src: (movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Poster) === 'N/A' ? 'https://placehold.it/198x264&text=Image+Not+Found' : movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Poster,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-title\",\n          children: movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Plot: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Plot]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group list-group-flush\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [\"Type: \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [\"Year: \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [\"Runtime: \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Runtime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [\"Genre: \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Genre]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [\"Language: \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Language]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [\"Country: \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [\"Director: \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Director]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [\"IMDB Rating: \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.imdbRating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Ratings.map(rating => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [rating === null || rating === void 0 ? void 0 : rating.Source, \" Rating: \", rating === null || rating === void 0 ? void 0 : rating.Value]\n        }, rating === null || rating === void 0 ? void 0 : rating.Source, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [\"Language: \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Language]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [\"Actors: \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Actors]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [\"Awards: \", movieDetails === null || movieDetails === void 0 ? void 0 : movieDetails.Awards]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieDetails, \"7p+gxV95/VZ85quoRWwxDDDMUkQ=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieDetails;\nexport default MovieDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"sources":["/Users/MacUser/Documents/Home/omdb-react/frontend/src/components/Movies/Details.js"],"names":["React","useEffect","useState","axios","Link","useParams","API_KEY","MovieDetails","id","isLoading","setIsLoading","errorMessage","setErrorMessage","movieDetails","setMovieDetails","abortController","AbortController","fetchMovieDetails","response","get","data","error","abort","objectFit","Poster","Title","Plot","Type","Year","Runtime","Genre","Language","Country","Director","imdbRating","Ratings","map","rating","Source","Value","Actors","Awards"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useParams } from 'react-router-dom';\nconst API_KEY = 'ce762116';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(`http://www.omdbapi.com/?i=${id}&apikey=${API_KEY}`);\n        setMovieDetails(response.data);\n      } catch (error) {\n        setErrorMessage(error);\n      }\n    };\n    fetchMovieDetails();\n    setIsLoading(false);\n\n    return () => abortController.abort();\n  }, [id]);\n\n  return (\n    <div className=\"movie-details\">\n      {isLoading && <div className=\"lds-dual-ring\" />}\n      {errorMessage && (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {errorMessage}\n        </div>\n      )}\n      {!isLoading && (\n        <div className=\"card\">\n          <img\n            className=\"card-img-top h-50\"\n            style={{ objectFit: 'cover' }}\n            src={\n              movieDetails?.Poster === 'N/A'\n                ? 'https://placehold.it/198x264&text=Image+Not+Found'\n                : movieDetails?.Poster\n            }\n            alt=\"\"\n          />\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{movieDetails?.Title}</h5>\n            <p className=\"card-text\">\n              <b>Plot: </b>\n              {movieDetails?.Plot}\n            </p>\n          </div>\n          <ul className=\"list-group list-group-flush\">\n            <li className=\"list-group-item\">Type: {movieDetails?.Type}</li>\n            <li className=\"list-group-item\">Year: {movieDetails?.Year}</li>\n            <li className=\"list-group-item\">Runtime: {movieDetails?.Runtime}</li>\n            <li className=\"list-group-item\">Genre: {movieDetails?.Genre}</li>\n            <li className=\"list-group-item\">Language: {movieDetails?.Language}</li>\n            <li className=\"list-group-item\">Country: {movieDetails?.Country}</li>\n            <li className=\"list-group-item\">Director: {movieDetails?.Director}</li>\n            <li className=\"list-group-item\">IMDB Rating: {movieDetails?.imdbRating}</li>\n            {movieDetails?.Ratings.map(rating => (\n              <li className=\"list-group-item\" key={rating?.Source}>\n                {rating?.Source} Rating: {rating?.Value}\n              </li>\n            ))}\n            <li className=\"list-group-item\">Language: {movieDetails?.Language}</li>\n\n            <li className=\"list-group-item\">Actors: {movieDetails?.Actors}</li>\n            <li className=\"list-group-item\">Awards: {movieDetails?.Awards}</li>\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"]},"metadata":{},"sourceType":"module"}