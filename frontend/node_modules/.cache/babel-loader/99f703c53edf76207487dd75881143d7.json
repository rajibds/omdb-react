{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/MacUser/Documents/Home/omdb-react/src/components/Movies/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { debounce } from 'throttle-debounce';\nimport MovieCard from './Card';\nconst DEFAULT_QUERY_TITLE = 'satyajit';\nconst API_KEY = 'ce762116';\n\nconst MovieList = () => {\n  _s();\n\n  const [movieList, setMovieList] = useState([]);\n  const [queryTitle, setQueryTitle] = useState(DEFAULT_QUERY_TITLE);\n  const [queryYear, setQueryYear] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  useEffect(() => {\n    setIsLoading(true);\n    setErrorMessage(null);\n    const abortController = new AbortController();\n    fetchMovies({\n      title: DEFAULT_QUERY_TITLE,\n      year: ''\n    });\n    setIsLoading(false);\n    return () => abortController.abort();\n  }, []);\n\n  const fetchMovies = async ({\n    title,\n    year\n  }) => {\n    try {\n      const result = await axios.get(`http://www.omdbapi.com/?s=${title}&y=${year}&apikey=${API_KEY}`);\n      console.log({\n        result\n      });\n\n      if (result.data.Response === 'False') {\n        setErrorMessage(result.data.Error);\n      } else {\n        setMovieList(result.data.Search);\n      }\n    } catch (error) {\n      setErrorMessage(error);\n    }\n  };\n\n  const fetchMoviesByTitleWithDebounce = useRef(debounce(1000, ({\n    title,\n    year\n  }) => {\n    fetchMovies({\n      title,\n      year\n    });\n  })).current;\n\n  const handleTitleChange = event => {\n    setQueryTitle(event.target.value);\n    fetchMoviesByTitleWithDebounce({\n      title: event.target.value,\n      year: queryYear\n    });\n  };\n\n  const fetchMoviesByYearWithDebounce = useRef(debounce(1000, ({\n    title,\n    year\n  }) => {\n    fetchMovies({\n      title,\n      year\n    });\n  })).current;\n\n  const handleYearChange = event => {\n    setQueryYear(event.target.value);\n    fetchMoviesByYearWithDebounce({\n      title: queryTitle,\n      year: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list__search input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Search by Title\",\n        \"aria-label\": \"Search by Title\",\n        onChange: event => handleTitleChange(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Search by Year\",\n        \"aria-label\": \"Search by Year\",\n        onChange: event => handleYearChange(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lds-dual-ring\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list__cards row mx-0\",\n      children: !isLoading && movieList.length > 0 && movieList.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        title: movie.Title,\n        poster: movie.Poster,\n        year: movie.Year,\n        imdbId: movie.imdbID\n      }, movie.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieList, \"q8gJP+psVlGRzX+pNcxaai0U2jg=\");\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["/Users/MacUser/Documents/Home/omdb-react/src/components/Movies/List.js"],"names":["React","useState","useEffect","useRef","axios","debounce","MovieCard","DEFAULT_QUERY_TITLE","API_KEY","MovieList","movieList","setMovieList","queryTitle","setQueryTitle","queryYear","setQueryYear","isLoading","setIsLoading","errorMessage","setErrorMessage","abortController","AbortController","fetchMovies","title","year","abort","result","get","console","log","data","Response","Error","Search","error","fetchMoviesByTitleWithDebounce","current","handleTitleChange","event","target","value","fetchMoviesByYearWithDebounce","handleYearChange","length","map","movie","Title","Poster","Year","imdbID"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { debounce } from 'throttle-debounce';\n\nimport MovieCard from './Card';\n\nconst DEFAULT_QUERY_TITLE = 'satyajit';\nconst API_KEY = 'ce762116';\n\nconst MovieList = () => {\n  const [movieList, setMovieList] = useState([]);\n  const [queryTitle, setQueryTitle] = useState(DEFAULT_QUERY_TITLE);\n  const [queryYear, setQueryYear] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setErrorMessage(null);\n    const abortController = new AbortController();\n\n    fetchMovies({ title: DEFAULT_QUERY_TITLE, year: '' });\n    setIsLoading(false);\n\n    return () => abortController.abort();\n  }, []);\n\n  const fetchMovies = async ({ title, year }) => {\n    try {\n      const result = await axios.get(\n        `http://www.omdbapi.com/?s=${title}&y=${year}&apikey=${API_KEY}`,\n      );\n      console.log({ result });\n      if (result.data.Response === 'False') {\n        setErrorMessage(result.data.Error);\n      } else {\n        setMovieList(result.data.Search);\n      }\n    } catch (error) {\n      setErrorMessage(error);\n    }\n  };\n\n  const fetchMoviesByTitleWithDebounce = useRef(\n    debounce(1000, ({ title, year }) => {\n      fetchMovies({ title, year });\n    }),\n  ).current;\n\n  const handleTitleChange = event => {\n    setQueryTitle(event.target.value);\n    fetchMoviesByTitleWithDebounce({ title: event.target.value, year: queryYear });\n  };\n\n  const fetchMoviesByYearWithDebounce = useRef(\n    debounce(1000, ({ title, year }) => {\n      fetchMovies({ title, year });\n    }),\n  ).current;\n\n  const handleYearChange = event => {\n    setQueryYear(event.target.value);\n    fetchMoviesByYearWithDebounce({ title: queryTitle, year: event.target.value });\n  };\n\n  return (\n    <div className=\"movie-list\">\n      <div className=\"movie-list__search input-group\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search by Title\"\n          aria-label=\"Search by Title\"\n          onChange={event => handleTitleChange(event)}\n        />\n        {/* <div class=\"input-group-append\">\n          <button class=\"btn btn-secondary\" type=\"button\">\n            Button\n          </button>\n        </div> */}\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search by Year\"\n          aria-label=\"Search by Year\"\n          onChange={event => handleYearChange(event)}\n        />\n        {/* <div class=\"input-group-append\">\n          <button class=\"btn btn-secondary\" type=\"button\">\n            Button\n          </button>\n        </div> */}\n      </div>\n\n      {isLoading && <div className=\"lds-dual-ring\" />}\n\n      {errorMessage && (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {errorMessage}\n        </div>\n      )}\n\n      <div className=\"movie-list__cards row mx-0\">\n        {!isLoading &&\n          movieList.length > 0 &&\n          movieList.map(movie => (\n            <MovieCard\n              key={movie.imdbID}\n              title={movie.Title}\n              poster={movie.Poster}\n              year={movie.Year}\n              imdbId={movie.imdbID}\n            />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}