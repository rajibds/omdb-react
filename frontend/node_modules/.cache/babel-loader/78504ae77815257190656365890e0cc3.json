{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/MacUser/Documents/Home/react-redux-template/src/containers/CounterContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { incrementCounter, decrementCounter } from '../actions/counter';\n\nconst Counter = props => {\n  const {\n    count,\n    incrementCounter,\n    decrementCounter\n  } = { ...props\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => incrementCounter(),\n      children: \"Increase Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => decrementCounter(),\n      children: \"Decrease Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Counter;\n\nconst mapStateToProps = state => ({\n  count: state.counter.count\n});\n\nconst mapDispatchToProps = dispatch => ({\n  incrementCounter: () => dispatch(incrementCounter()),\n  decrementCounter: () => dispatch(decrementCounter())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/MacUser/Documents/Home/react-redux-template/src/containers/CounterContainer.jsx"],"names":["React","connect","incrementCounter","decrementCounter","Counter","props","count","mapStateToProps","state","counter","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,oBAAnD;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACvB,QAAM;AAAEC,IAAAA,KAAF;AAASJ,IAAAA,gBAAT;AAA2BC,IAAAA;AAA3B,MAAgD,EAAE,GAAGE;AAAL,GAAtD;AACA,sBACE;AAAA,4BACE;AAAA,4BAAaC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMJ,gBAAgB,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMC,gBAAgB,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD,CATD;;KAAMC,O;;AAWN,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCF,EAAAA,KAAK,EAAEE,KAAK,CAACC,OAAN,CAAcH;AADW,CAAL,CAA7B;;AAIA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACtCT,EAAAA,gBAAgB,EAAE,MAAMS,QAAQ,CAACT,gBAAgB,EAAjB,CADM;AAEtCC,EAAAA,gBAAgB,EAAE,MAAMQ,QAAQ,CAACR,gBAAgB,EAAjB;AAFM,CAAL,CAAnC;;AAKA,eAAeF,OAAO,CAACM,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CN,OAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { incrementCounter, decrementCounter } from '../actions/counter';\n\nconst Counter = props => {\n  const { count, incrementCounter, decrementCounter } = { ...props };\n  return (\n    <>\n      <div>Count: {count}</div>\n      <button onClick={() => incrementCounter()}>Increase Count</button>\n      <button onClick={() => decrementCounter()}>Decrease Count</button>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  count: state.counter.count,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  incrementCounter: () => dispatch(incrementCounter()),\n  decrementCounter: () => dispatch(decrementCounter()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\n"]},"metadata":{},"sourceType":"module"}